// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/users": {
            "get": {
                "description": "Gets a paginated users list from the db and returns it",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Gets paginated users",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "example": 2,
                        "description": "Page to retrieve",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "example": 3,
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Alice",
                        "description": "FirstName filter",
                        "name": "firstName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Tingo",
                        "description": "LastName filter",
                        "name": "lastName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "example": "alicetingo@example.com",
                        "description": "Email filter",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "atingo",
                        "description": "Nickname filter",
                        "name": "nickname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "DE",
                        "description": "Country filter",
                        "name": "country",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedUsers"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new user and inserts it in the DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "User to create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "description": "Gets a user by its id from the DB and returns it",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Gets a user",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "ddd50d89-0cf4-4d35-b8e8-51a2b5a06ce4",
                        "description": "User id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Updates a user by its id with the given body data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Updates a user",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "7f598128-fb35-4ced-b80f-c5b5f66bd583",
                        "description": "User id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a user by its id from the DB",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Deletes a user",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "5cace01f-45c3-49f0-a725-c22866874095",
                        "description": "User id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "echo.HTTPError": {
            "type": "object",
            "properties": {
                "message": {}
            }
        },
        "models.PaginatedUsers": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "type": "integer"
                },
                "hasMore": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer"
                },
                "totalCount": {
                    "description": "TotalCount is the number of elements that has the db",
                    "type": "integer"
                },
                "totalPages": {
                    "description": "TotalPages is the number of pages based on the total count",
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "models.User": {
            "type": "object",
            "required": [
                "country",
                "email",
                "firstName",
                "lastName",
                "nickname"
            ],
            "properties": {
                "country": {
                    "type": "string",
                    "example": "DE"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2016-05-18T16:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "atingo@example.com"
                },
                "firstName": {
                    "type": "string",
                    "example": "Alice"
                },
                "id": {
                    "type": "string",
                    "example": "ddd50d89-0cf4-4d35-b8e8-51a2b5a06ce4"
                },
                "lastName": {
                    "type": "string",
                    "example": "Tingo"
                },
                "nickname": {
                    "type": "string",
                    "example": "atingo"
                },
                "password": {
                    "description": "Should be json:\"-\" in order to hide the password",
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2016-05-18T16:00:00Z"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Users Microservices",
	Description:      "Users Microservices",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
